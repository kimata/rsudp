diff --git a/rsudp/c_plots.py b/rsudp/c_plots.py
index 2187ba2..3fb601d 100644
--- a/rsudp/c_plots.py
+++ b/rsudp/c_plots.py
@@ -47,7 +47,16 @@ try:
     import matplotlib.image as mpimg
     from matplotlib import rcParams
     from matplotlib.ticker import EngFormatter
+    import matplotlib.font_manager as fm
+    
+    # Configure matplotlib settings
     rcParams['toolbar'] = 'None'
+    
+    # Set default font to Frutiger Neue LT W1G Medium
+    plt.rcParams['font.family'] = 'sans-serif'
+    plt.rcParams['font.sans-serif'] = ['Frutiger Neue LT W1G', 'DejaVu Sans', 'Arial', 'sans-serif']
+    plt.rcParams['font.size'] = 10
+    
     plt.ion()
     MPL = True
 
@@ -181,7 +190,7 @@ class AbcPlot():
             h = evt.height
         else:
             h = self.fig.get_size_inches()[1] * self.fig.dpi
-        plt.tight_layout(pad=0, h_pad=0.1, w_pad=0, rect=[0.02, 0.01, 0.98, 0.90 + 0.045 * (h / 1080)])  # [left, bottom, right, top]
+        plt.tight_layout(pad=0, h_pad=0.1, w_pad=0, rect=[0.02, 0.01, 0.98, 0.94 + 0.015 * (h / 1080)])  # [left, bottom, right, top]
 
     def deconvolve(self):
         '''
@@ -236,7 +245,7 @@ class AbcPlot():
         '''
         Sets the figure title back to something that makes sense for the live viewer.
         '''
-        self.fig.suptitle(f'Raspberry Shake {self.stn} Live Data - Detected Events: {events}', fontsize=14, color=self.fgcolor, x=0.52)
+        self.fig.suptitle(f'Raspberry Shake {self.stn} Live Data - Detected Events: {events}', fontsize=14, color=self.fgcolor, x=0.52, y=0.975)
 
     def setup_fig_manager(self):
         '''
@@ -414,7 +423,7 @@ class Plot(AbcPlot):
 
         # temporarily set title for this event
         self.fig.suptitle(f'{self.stn} Detected Event - {title_time_str} UTC',
-                        fontsize=14, color=self.fgcolor, x=0.52)
+                        fontsize=14, color=self.fgcolor, x=0.52, y=0.975)
 
         # save the figure with STA/LTA metadata
         self.savefig(event_time=event_time, event_time_str=event_time_str, sta_val=sta_val, lta_val=lta_val)
@@ -426,7 +435,7 @@ class Plot(AbcPlot):
         '''
         Initialize plot elements and calculate parameters.
         '''
-        self.fig = plt.figure(self.figure_num, figsize=(11, 3 * self.num_chans))
+        self.fig = plt.figure(self.figure_num, figsize=(11, 6 * self.num_chans))
         self.fig.canvas.mpl_connect('close_event', self.handle_close)
         self.fig.canvas.mpl_connect('resize_event', self.handle_resize)
 
@@ -436,7 +445,7 @@ class Plot(AbcPlot):
         self.fig.patch.set_facecolor(self.bgcolor)  # background color
         self.fig.suptitle('Raspberry Shake %s Live Data%s'  # title
                           % (self.stn, self.event_text),
-                          fontsize=14, color=self.fgcolor, x=0.52)
+                          fontsize=14, color=self.fgcolor, x=0.52, y=0.975)
         self.ax, self.lines = [], []  # list for subplot axes and lines artists
         self.mult = 1  # spectrogram selection multiplier
         if self.spectrogram:
@@ -493,7 +502,7 @@ class Plot(AbcPlot):
         end = np.datetime64(self.stream[0].stats.endtime)  # numpy time
 
         im = mpimg.imread(pr.resource_filename('rsudp', os.path.join('img', 'version1-01-small.png')))
-        self.imax = self.fig.add_axes([0.015, 0.944, 0.2, 0.056], anchor='NW')  # [left, bottom, right, top]
+        self.imax = self.fig.add_axes([0.015, 0.920, 0.2, 0.056], anchor='NW')  # [left, bottom, right, top]
         self.imax.imshow(im, aspect='equal', interpolation='bilinear')
         self.imax.axis('off')
         # set up axes and artists
@@ -804,7 +813,7 @@ class Plot(AbcPlot):
                 self.save.append(event_info)  # append the event to the save list
             self.fig.suptitle('Raspberry Shake %s Live Data - Detected Events: %s'  # title
                               % (self.stn, self.events),
-                              fontsize=14, color=self.fgcolor, x=0.52)
+                              fontsize=14, color=self.fgcolor, x=0.52, y=0.975)
             self.fig.canvas.manager.set_window_title('(%s) %s - Raspberry Shake Monitor' % (self.events, self.stn))
 
         if rs.getCHN(d) in self.chans:
